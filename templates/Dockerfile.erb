FROM ruby:2.6.5-alpine as builder

RUN apk add --update --no-cache \
    build-base \
    postgresql-dev \
    git \
    yarn \
    tzdata \
    vim \
    less

WORKDIR /app

COPY Gemfile* ./
COPY vendor ./vendor/

ARG RAILS_ENV=development
ENV RAILS_ENV=$RAILS_ENV

# Fix for sassc issue https://northsail.io/articles/ruby-sassc-illegal-instruction
RUN bundle config --local build.sassc --disable-march-tune-native

RUN if [ "$RAILS_ENV" = "production" ] || [ "$RAILS_ENV" = "staging" ]; then bundle install --jobs 4 --deployment --without development test; else bundle install --jobs 4 --path vendor/bundle; fi

COPY package.json* ./
COPY yarn.lock ./
RUN yarn install

COPY . /app

ARG SECRET_KEY_BASE
ENV SECRET_KEY_BASE=$SECRET_KEY_BASE

ARG DATABASE_URL="postgres://postgres@db"
ENV DATABASE_URL=$DATABASE_URL

ARG REDIS_URL="redis://redis"
ENV REDIS_URL=$REDIS_URL

ARG AWS_DEFAULT_REGION
ARG AWS_CONTAINER_CREDENTIALS_RELATIVE_URI
ARG COMPILE_ASSETS
RUN if [ ! -z "$COMPILE_ASSETS" ] || [ "$RAILS_ENV" = "production" ] || [ "$RAILS_ENV" = "staging" ]; then ASSET_COMPILATION=1 bundle exec rake assets:precompile; fi

ENTRYPOINT [ "bundle", "exec" ]

# App
FROM builder as app

ENV RAILS_LOG_TO_STDOUT=1

ARG GIT_COMMIT_SHA=""
ENV GIT_COMMIT_SHA=$GIT_COMMIT_SHA

ARG RAILS_MASTER_KEY
RUN if [ ! -z "$RAILS_MASTER_KEY" ] ; then echo "$RAILS_MASTER_KEY" > config/credentials/$RAILS_ENV.key ; fi

ENV EDITOR=vim
ENTRYPOINT [ "bundle", "exec" ]

# Web
FROM nginx as web

WORKDIR /app

COPY --from=builder /app/public /app/public/
COPY docker/nginx/nginx.conf /etc/nginx/conf.d/default.conf

ARG RAILS_ENV=development
RUN if [ "$RAILS_ENV" = "production" ]; then sed -i 's/app:3000/localhost:3000/' /etc/nginx/conf.d/default.conf; fi

EXPOSE 80

CMD [ "nginx", "-g", "daemon off;" ]
